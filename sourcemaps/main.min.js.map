{"version":3,"sources":["script.js"],"names":["body","document","burgerMenu","burger","querySelector","menu","contact","addEventListener","classList","contains","remove","add","fixedNav","nav","window","scrollY","lazyImages","slice","call","querySelectorAll","active","lazyLoad","setTimeout","forEach","lazyImage","getBoundingClientRect","top","innerHeight","bottom","getComputedStyle","opacity","src","dataset","srcset","filter","image","length","removeEventListener","Swiper","direction","loop","initialSlide","speed","slidesPerView","spaceBetween","autoplay","delay","disableOnInteraction","keyboard","enabled","onlyInViewport","pagination","el","type","navigation","nextEl","prevEl","links","link","clickHandler","e","preventDefault","theLink","this","getAttribute","scrollIntoView","behavior","swiper","freeMode","breakpoints","swiper2","thumbs","getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","days","month","initializeClock","id","clock","getElementById","mouthSpan","daysSpan","hoursSpan","minutesSpan","secondsSpan","updateClock","t","innerHTML","clearInterval","timeinterval","setInterval"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["// loader\r\nconst body = document.body\r\nwindow.addEventListener('load', ()=>{\r\n   body.classList.add('loaded')  \r\n})\r\n//\r\nif (document.querySelector('img[loading=lazy]')){\r\n   document.addEventListener('DOMContentLoaded', function () {\r\n      let lazyImages = [].slice.call(document.querySelectorAll('img[loading=lazy]'));\r\n      let active = false;\r\n      const lazyLoad = function () {\r\n         if (active === false) {\r\n            active = true;\r\n            setTimeout(function () {\r\n               lazyImages.forEach(function (lazyImage) {\r\n                  if ((lazyImage.getBoundingClientRect().top <= window.innerHeight && lazyImage.getBoundingClientRect().bottom >= 0) && getComputedStyle(lazyImage).opacity !== '0') {\r\n                     lazyImage.src = lazyImage.dataset.src;\r\n                     lazyImage.srcset = lazyImage.dataset.srcset;\r\n                     lazyImages = lazyImages.filter(function (image) {\r\n                        return image !== lazyImage;\r\n                     });\r\n                     if (lazyImages.length === 0) {\r\n                        document.removeEventListener('scroll', lazyLoad);\r\n                        window.removeEventListener('resize', lazyLoad);\r\n                        window.removeEventListener('orientationchange', lazyLoad);\r\n                     }\r\n                  }\r\n               });\r\n               active = false;\r\n            }, 500);\r\n         }\r\n      };\r\n      document.addEventListener('scroll', lazyLoad);\r\n      window.addEventListener('resize', lazyLoad);\r\n      window.addEventListener('orientationchange', lazyLoad);\r\n   });\r\n}\r\n// burger \r\nfunction burgerMenu() {\r\n   const burger = document.querySelector('.burger')\r\n   const menu = document.querySelector('.nav__menu')\r\n   const contact = document.querySelector('.nav__contact')\r\n   const body = document.querySelector('body')\r\n   burger.addEventListener('click', () => {\r\n      if (!menu.classList.contains('active')) {\r\n         menu.classList.add('active')\r\n         contact.classList.add('active')\r\n         burger.classList.add('active-burger')\r\n         body.classList.add('locked')\r\n      } else {\r\n         menu.classList.remove('active')\r\n         burger.classList.remove('active-burger')\r\n         body.classList.remove('locked')\r\n         contact.classList.remove('active')\r\n      }\r\n   })\r\n}\r\nburgerMenu();\r\nfunction fixedNav() {\r\n   const nav = document.querySelector('nav')\r\n   const breakpoint = 1\r\n   if (window.scrollY > breakpoint) {\r\n      nav.classList.add('fixed__nav')\r\n   } else {\r\n      nav.classList.remove('fixed__nav')\r\n   }\r\n}\r\nwindow.addEventListener('scroll', fixedNav)\r\n// home \r\nif (document.querySelector('.home')) {\r\n   // review__swiper\r\n   new Swiper('.review__swiper > .swiper-container', {\r\n      direction: 'horizontal',\r\n      loop: !1,\r\n      initialSlide: 0,\r\n      speed: 1500,\r\n      slidesPerView: 1,\r\n      spaceBetween: 50,\r\n      autoplay: {\r\n         delay: 5000,\r\n         disableOnInteraction: true,\r\n      },\r\n      keyboard: {\r\n         enabled: !0,\r\n         onlyInViewport: !1\r\n      },\r\n      pagination: {\r\n         el: \".swiper-pagination\",\r\n         type: \"fraction\",\r\n      },\r\n      navigation: {\r\n         nextEl: \".swiper-next\",\r\n         prevEl: \".swiper-prev\",\r\n      },\r\n   });\r\n   // scroll down link start\r\n   const links = document.querySelectorAll(\".start__scroll\");\r\n   for (const link of links) {\r\n      link.addEventListener(\"click\", clickHandler);\r\n   }\r\n   function clickHandler(e) {\r\n      e.preventDefault();\r\n      const theLink = this.getAttribute(\"href\");\r\n      document.querySelector(theLink).scrollIntoView({\r\n         behavior: \"smooth\"\r\n      });\r\n   }\r\n}\r\n// blog\r\nif (document.querySelector('.blog')) {\r\n   var swiper = new Swiper(\".mySwiper\", {\r\n      spaceBetween: 60,\r\n      slidesPerView: 2,\r\n      loop: !0,\r\n      freeMode: true,\r\n      direction: 'vertical',\r\n      breakpoints: {\r\n         1201: {\r\n            spaceBetween: 30,\r\n            slidesPerView: 2,\r\n            direction: 'vertical',\r\n         },\r\n         451: {\r\n            slidesPerView: 2,\r\n            direction: 'horizontal',\r\n         },\r\n         0: {\r\n            direction: 'horizontal',\r\n            slidesPerView: 1,\r\n         }\r\n      }\r\n\r\n   });\r\n   var swiper2 = new Swiper(\".mySwiper2\", {\r\n      spaceBetween: 10,\r\n      loop: !0,\r\n      thumbs: {\r\n         swiper: swiper,\r\n      },\r\n   });\r\n}\r\n// soon\r\nif (document.querySelector('.body__soon')) {\r\n   function getTimeRemaining(endtime) {\r\n      const total = Date.parse(endtime) - Date.parse(new Date());\r\n      const seconds = Math.floor((total / 1000) % 60);\r\n      const minutes = Math.floor((total / 1000 / 60) % 60);\r\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\r\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\r\n      const month = Math.floor(total / (1000 * 60 * 60 * 24 * 30));\r\n\r\n      return {\r\n         total,\r\n         days,\r\n         hours,\r\n         minutes,\r\n         seconds,\r\n         month\r\n      };\r\n   }\r\n   function initializeClock(id, endtime) {\r\n      const clock = document.getElementById(id);\r\n      const mouthSpan = clock.querySelector('#timer-months');\r\n      const daysSpan = clock.querySelector('#timer-days');\r\n      const hoursSpan = clock.querySelector('#timer-hours');\r\n      const minutesSpan = clock.querySelector('#timer-mins');\r\n      const secondsSpan = clock.querySelector('#timer-secs');\r\n      function updateClock() {\r\n         const t = getTimeRemaining(endtime);\r\n         mouthSpan.innerHTML = t.month;\r\n         daysSpan.innerHTML = ('0' + t.days).slice(-2);\r\n         hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\r\n         minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\r\n         secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\r\n         if (t.total <= 0) {\r\n            clearInterval(timeinterval);\r\n         }\r\n      }\r\n      updateClock();\r\n      const timeinterval = setInterval(updateClock, 1000);\r\n   }\r\n   const deadline = new Date(Date.parse(new Date()) + 2 * 30 * 24 * 60 * 60 * 1000);\r\n   initializeClock('timer', deadline);\r\n}"]}